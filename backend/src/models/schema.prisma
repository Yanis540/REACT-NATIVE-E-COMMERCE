// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  image             String?
  name              String
  email             String?   @unique
  hashedPassword    String
  address           String?
  created_at        DateTime  @default(now())
  favorite_products Product[]
  orders            Order[]
}

model Product {
  id             String           @id @default(uuid())
  name           String
  rating         Float            @default(1)
  price          Float
  image          String
  quantity       Int              @default(0)
  description    String?          @db.Text
  size_variants  SizeVariant[]
  categories     Category[]
  colors         ColorVariant[]
  orders_product OrderedProduct[]
  liked_by       User[]
  orders         Order[]
}

model Category {
  name     String    @id
  image    String?
  products Product[]
}

enum SizeVariant {
  L
  M
  S
}

enum ColorVariant {
  blue
  red
  green
  white
  black
}

model Order {
  id              String           @id @default(uuid())
  date            DateTime         @default(now())
  id_user         String
  user            User             @relation(fields: [id_user], references: [id], onDelete: Cascade)
  amount          Int              @default(0)
  address         String
  checkout_url    String
  checkout_status CheckoutStatus
  payment_status  PaymentStatus
  type            String
  status          OrderStatus
  products        Product[]
  basket          OrderedProduct[]
}

model OrderedProduct {
  id_product String
  id_order   String
  product    Product       @relation(fields: [id_product], references: [id], onDelete: Cascade)
  order      Order         @relation(fields: [id_order], references: [id], onDelete: Cascade)
  quantity   Int
  size       SizeVariant?
  color      ColorVariant?

  @@id([id_order, id_product])
}

enum PaymentStatus {
  paid
  unpaid
  no_payment_required
}

enum CheckoutStatus {
  open
  complete
  expired
}

enum OrderStatus {
  progress
  cancelled
  delivered
}
